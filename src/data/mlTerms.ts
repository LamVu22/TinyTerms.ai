import { Topic } from './terms';

export const machineLearningTopic: Topic = {
    id: 'machine-learning',
    name: 'Machine Learning',
    description: 'How computers learn patterns from data',
    emoji: 'ü§ñ',
    terms: [
        {
            slug: 'overfitting',
            title: 'Overfitting',
            emoji: 'üß†',
            summary: 'Memorizing homework, not the lesson.',
            tags: ['evaluation', 'model-quality'],
            one: 'Overfitting is when you memorize the homework, not the lesson.',
            story: "You practice ten spelling words and ace those exact words. But on test day, new words appear and you freeze. You memorized, not the patterns.",
            examples: [
                'Model 99% on training, fails on new data',
                "Quiz app only knows yesterday's questions",
            ],
            grown: 'Model capacity capturing noise; validation error rises while training error falls.',
            quiz: [
                { q: 'Big gap between train and test means risk?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Seeing new data is important?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is memorizing always good?', options: ['Yes', 'No'], a: 'No' },
            ],
        },
        {
            slug: 'neural-network',
            title: 'Neural Network',
            emoji: 'üï∏Ô∏è',
            summary: 'Like a brain made of tiny decision-makers.',
            tags: ['architecture', 'deep-learning'],
            one: 'A neural network is like a brain made of simple decision-makers connected together.',
            story: "Imagine a team of people passing notes. Each person reads notes, thinks about them, and passes new notes forward. Together, they solve complex puzzles no single person could handle.",
            examples: [
                'Image recognition: "Is this a cat?"',
                'Voice assistants understanding speech',
            ],
            grown: 'Interconnected layers of artificial neurons processing weighted inputs through activation functions.',
            quiz: [
                { q: 'Do neurons work together?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can one neuron solve everything?', options: ['Yes', 'No'], a: 'No' },
                { q: 'Do layers pass information forward?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'underfitting',
            title: 'Underfitting',
            emoji: 'üìâ',
            summary: 'Not learning enough from the data.',
            tags: ['evaluation', 'model-quality'],
            one: 'Underfitting is when a model is too simple to capture the patterns in the data.',
            story: "Imagine trying to predict tomorrow's weather using only today's temperature. You miss important details like humidity or wind.",
            examples: [
                'Linear model on complex data',
                'Predicting stock prices with one feature',
            ],
            grown: 'A model that performs poorly on both training and validation data due to oversimplification.',
            quiz: [
                { q: 'Does underfitting mean poor learning?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can simple models underfit?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is underfitting the opposite of overfitting?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'supervised-learning',
            title: 'Supervised Learning',
            emoji: 'üë©‚Äçüè´',
            summary: 'Learning with labeled examples.',
            tags: ['learning', 'data'],
            one: 'Supervised learning is like learning with a teacher who provides the correct answers.',
            story: 'Imagine learning math with a teacher who shows you examples and their solutions, so you can solve similar problems later.',
            examples: [
                'Spam email detection',
                'Predicting house prices',
            ],
            grown: 'A type of machine learning where models are trained on labeled data.',
            quiz: [
                { q: 'Does it use labeled data?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is there a teacher-like guide?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it predict outcomes?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'unsupervised-learning',
            title: 'Unsupervised Learning',
            emoji: 'üïµÔ∏è‚Äç‚ôÇÔ∏è',
            summary: 'Finding patterns without labels.',
            tags: ['learning', 'data'],
            one: 'Unsupervised learning is like exploring a new city without a map, finding patterns on your own.',
            story: 'Imagine sorting a box of mixed buttons by size and color without being told how to do it.',
            examples: [
                'Customer segmentation',
                'Anomaly detection',
            ],
            grown: 'A type of machine learning where models find patterns in unlabeled data.',
            quiz: [
                { q: 'Does it work without labels?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it find hidden patterns?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is clustering an example?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'feature-engineering',
            title: 'Feature Engineering',
            emoji: 'üîß',
            summary: 'Crafting better inputs for models.',
            tags: ['data', 'preprocessing'],
            one: 'Feature engineering is like preparing ingredients before cooking to make the dish better.',
            story: 'Imagine creating a new feature like "age group" from raw age data to improve predictions.',
            examples: [
                'Creating "total price" from quantity and unit price',
                'Extracting "day of week" from a date',
            ],
            grown: 'The process of selecting, transforming, and creating features to improve model performance.',
            quiz: [
                { q: 'Does it improve model inputs?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it part of preprocessing?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it involve creating new features?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'gradient-descent',
            title: 'Gradient Descent',
            emoji: '‚õ∞Ô∏è',
            summary: 'Finding the lowest point of error.',
            tags: ['optimization', 'training'],
            one: 'Gradient descent is like hiking downhill to find the lowest valley.',
            story: 'Imagine rolling a ball down a hill. It moves step by step, always going downhill, until it reaches the bottom.',
            examples: [
                'Training neural networks',
                'Optimizing linear regression',
            ],
            grown: 'An optimization algorithm used to minimize the error of a model by adjusting its parameters.',
            quiz: [
                { q: 'Does it minimize error?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it used in training models?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it involve steps downhill?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'hyperparameter-tuning',
            title: 'Hyperparameter Tuning',
            emoji: 'üéõÔ∏è',
            summary: 'Adjusting settings for better models.',
            tags: ['optimization', 'training'],
            one: 'Hyperparameter tuning is like adjusting the knobs on a radio to get the clearest signal.',
            story: 'Imagine trying different oven temperatures to bake the perfect cake. Hyperparameter tuning works similarly for models.',
            examples: [
                'Choosing learning rate',
                'Setting number of layers in a neural network',
            ],
            grown: 'The process of optimizing hyperparameters to improve model performance.',
            quiz: [
                { q: 'Does it involve model settings?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it improve performance?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is learning rate a hyperparameter?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'decision-tree',
            title: 'Decision Tree',
            emoji: 'üå≥',
            summary: 'A tree-like model for decisions.',
            tags: ['model', 'classification'],
            one: 'A decision tree is like a flowchart that helps make decisions step by step.',
            story: 'Imagine deciding what to wear based on the weather: sunny ‚Üí t-shirt, rainy ‚Üí raincoat.',
            examples: [
                'Loan approval systems',
                'Predicting customer churn',
            ],
            grown: 'A model that splits data into branches based on feature values to make predictions.',
            quiz: [
                { q: 'Does it split data into branches?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like a flowchart?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it classify data?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'random-forest',
            title: 'Random Forest',
            emoji: 'üå≤',
            summary: 'A forest of decision trees.',
            tags: ['model', 'ensemble'],
            one: 'Random forest combines many decision trees to make better predictions.',
            story: 'Imagine asking multiple friends for advice and taking the majority opinion. Random forest works similarly.',
            examples: [
                'Predicting stock prices',
                'Classifying images',
            ],
            grown: 'An ensemble learning method that uses multiple decision trees to improve accuracy.',
            quiz: [
                { q: 'Does it use multiple trees?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it an ensemble method?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it improve accuracy?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'training-data',
            title: 'Training Data',
            emoji: 'üìä',
            summary: 'The data used to teach a model.',
            tags: ['data', 'training'],
            one: 'Training data is like the homework a student uses to learn a subject.',
            story: 'Imagine learning math by solving practice problems. Training data provides the examples a model learns from.',
            examples: [
                'Images of cats and dogs for a classification model',
                'Historical sales data for a forecasting model',
            ],
            grown: 'Input data used to train a machine learning model, often labeled in supervised learning.',
            quiz: [
                { q: 'Is training data used to teach models?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does poor data lead to poor models?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it part of supervised learning?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'feature',
            title: 'Feature',
            emoji: 'üìê',
            summary: 'A measurable property of data.',
            tags: ['data', 'preprocessing'],
            one: 'Features are like ingredients in a recipe‚Äîthey determine the outcome.',
            story: 'Imagine predicting house prices using features like size, location, and number of bedrooms.',
            examples: [
                'Number of bedrooms in a house',
                'Age of a customer in a marketing model',
            ],
            grown: 'Individual measurable properties or characteristics of data used in machine learning models.',
            quiz: [
                { q: 'Are features properties of data?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Do features impact model accuracy?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is feature engineering important?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'feature-vector',
            title: 'Feature Vector',
            emoji: 'üìè',
            summary: 'A list of numerical values representing data.',
            tags: ['data', 'preprocessing'],
            one: 'A feature vector is like a checklist of characteristics for each data point.',
            story: 'Imagine describing a car with numbers: 4 wheels, 2 doors, 150 horsepower. That‚Äôs a feature vector.',
            examples: [
                'Vector: [3, 1200, 2] for a house with 3 bedrooms, 1200 sqft, 2 bathrooms',
                'Vector: [25, 1] for a 25-year-old customer who made 1 purchase',
            ],
            grown: 'An array of numerical values representing the features of a data instance.',
            quiz: [
                { q: 'Does a feature vector represent data?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it numerical?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it describe a data point?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'label',
            title: 'Label',
            emoji: 'üè∑Ô∏è',
            summary: 'The correct answer in supervised learning.',
            tags: ['data', 'supervised-learning'],
            one: 'A label is like the answer key for a test‚Äîit tells the model what‚Äôs correct.',
            story: 'Imagine teaching a model to recognize cats by labeling pictures as ‚Äúcat‚Äù or ‚Äúnot cat.‚Äù',
            examples: [
                'Spam or not spam in email classification',
                'Price of a house in a regression model',
            ],
            grown: 'The output value a model aims to predict, used in supervised learning.',
            quiz: [
                { q: 'Are labels used in supervised learning?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Do labels guide the model?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Are labels part of training data?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'reinforcement-learning',
            title: 'Reinforcement Learning',
            emoji: 'üéÆ',
            summary: 'Learning by trial and error to maximize rewards.',
            tags: ['learning', 'ai'],
            one: 'Reinforcement learning is like training a dog with treats for good behavior.',
            story: 'Imagine teaching a robot to play a game by rewarding it for winning moves and penalizing it for losing ones.',
            examples: [
                'Robots learning to walk',
                'AI playing chess',
            ],
            grown: 'A type of machine learning where agents learn by interacting with their environment.',
            quiz: [
                { q: 'Does it involve rewards?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it trial and error based?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it teach robots to walk?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'natural-language-processing',
            title: 'Natural Language Processing',
            emoji: 'üó£Ô∏è',
            summary: 'Teaching computers to understand human language.',
            tags: ['language', 'ai'],
            one: 'NLP helps computers understand and respond to human language.',
            story: 'Think of chatbots that can answer your questions or translate languages instantly.',
            examples: [
                'Google Translate',
                'ChatGPT',
            ],
            grown: 'A field of AI focused on the interaction between computers and human language.',
            quiz: [
                { q: 'Does NLP deal with human language?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it translate languages?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it used in chatbots?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'classification',
            title: 'Classification',
            emoji: 'üìÇ',
            summary: 'Assigning labels to data.',
            tags: ['model', 'supervised-learning'],
            one: 'Classification is like sorting mail into ‚Äúspam‚Äù and ‚Äúnot spam‚Äù categories.',
            story: 'Imagine teaching a model to recognize animals by labeling pictures as ‚Äúcat,‚Äù ‚Äúdog,‚Äù or ‚Äúbird.‚Äù',
            examples: [
                'Spam detection',
                'Handwriting recognition',
            ],
            grown: 'A supervised learning task where the model assigns a label to input data.',
            quiz: [
                { q: 'Is classification supervised learning?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it assign labels?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is spam detection an example?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'deep-learning',
            title: 'Deep Learning',
            emoji: 'üåä',
            summary: 'A subset of ML using deep neural networks.',
            tags: ['learning', 'ai'],
            one: 'Deep learning uses layers of neural networks to solve complex problems.',
            story: 'Imagine peeling layers of an onion to get to the core. Deep learning works through layers to find solutions.',
            examples: [
                'Speech recognition',
                'Autonomous vehicles',
            ],
            grown: 'A machine learning technique that uses deep neural networks for complex tasks.',
            quiz: [
                { q: 'Does it use neural networks?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it a subset of machine learning?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it solve complex problems?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'big-data',
            title: 'Big Data',
            emoji: 'üíæ',
            summary: 'Large datasets used for ML.',
            tags: ['data', 'scalability'],
            one: 'Big data is like a library of information for machine learning models.',
            story: 'Imagine training a model to recognize faces using millions of photos. Big data provides the scale needed.',
            examples: [
                'Social media data for sentiment analysis',
                'Sensor data for predictive maintenance',
            ],
            grown: 'Datasets that are too large or complex for traditional data-processing tools to handle.',
            quiz: [
                { q: 'Is big data essential for ML?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it improve model accuracy?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is Hadoop used for big data?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'cross-validation',
            title: 'Cross Validation',
            emoji: '‚úÖ',
            summary: 'Testing AI models multiple times to make sure they really work.',
            tags: ['validation', 'testing'],
            one: 'Cross validation tests machine learning models several times to ensure they work reliably.',
            story: 'Like taking multiple practice tests before the real exam to make sure you are really ready.',
            examples: [
                'Model performance testing',
                'Avoiding overfitting',
            ],
            grown: 'A statistical method to evaluate ML models by partitioning data and testing performance across multiple splits.',
            quiz: [
                { q: 'Does it test multiple times?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it improve reliability?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like practice tests?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'backpropagation',
            title: 'Backpropagation',
            emoji: '‚è™',
            summary: 'Teaching neural networks by working backwards from mistakes.',
            tags: ['learning', 'neural-networks'],
            one: 'Backpropagation trains neural networks by going backwards and fixing mistakes.',
            story: 'Like checking your math homework by working backwards from the wrong answer to find where you made the mistake.',
            examples: [
                'Training deep networks',
                'Image recognition learning',
            ],
            grown: 'An algorithm for training neural networks by computing gradients backwards through the network layers.',
            quiz: [
                { q: 'Does it work backwards?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it fix mistakes?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it for neural networks?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'ensemble-method',
            title: 'Ensemble Method',
            emoji: 'üéº',
            summary: 'Combining many models together like a musical ensemble.',
            tags: ['combination', 'improvement'],
            one: 'Ensemble methods combine multiple models to make better predictions than any single model.',
            story: 'Like asking several friends for advice and combining their opinions to make the best decision.',
            examples: [
                'Random forest',
                'Voting classifiers',
            ],
            grown: 'ML techniques that combine multiple learning algorithms to achieve better predictive performance.',
            quiz: [
                { q: 'Does it combine models?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it better than one model?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like asking friends?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'confusion-matrix',
            title: 'Confusion Matrix',
            emoji: 'üé≠',
            summary: 'A table showing how often AI gets things right or wrong.',
            tags: ['evaluation', 'metrics'],
            one: 'Confusion matrix shows how well a classification model performs by counting correct and incorrect predictions.',
            story: 'Like a report card that shows exactly which questions you got right and which ones you confused.',
            examples: [
                'Model performance evaluation',
                'Error analysis',
            ],
            grown: 'A table used to evaluate classification model performance by showing true vs predicted classifications.',
            quiz: [
                { q: 'Does it show performance?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it count mistakes?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like a report card?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'anomaly-detection',
            title: 'Anomaly Detection',
            emoji: 'üö®',
            summary: 'Finding things that are unusual or do not fit the normal pattern.',
            tags: ['detection', 'outliers'],
            one: 'Anomaly detection finds data points that are significantly different from normal patterns.',
            story: 'Like a security guard who notices when someone is acting suspiciously different from everyone else.',
            examples: [
                'Credit card fraud detection',
                'Network security monitoring',
            ],
            grown: 'ML technique for identifying data points that deviate significantly from normal patterns or expected behavior.',
            quiz: [
                { q: 'Does it find unusual things?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like security?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Can it detect fraud?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'transfer-learning',
            title: 'Transfer Learning',
            emoji: 'üéì',
            summary: 'Using knowledge from one task to help with a different but related task.',
            tags: ['knowledge-transfer', 'efficiency'],
            one: 'Transfer learning uses knowledge gained from one problem to solve a different but similar problem.',
            story: 'Like using your bike-riding skills to help you learn to ride a motorcycle faster.',
            examples: [
                'Using image models for medical scans',
                'Language models for different languages',
            ],
            grown: 'ML technique where a model developed for one task is adapted and used as a starting point for a related task.',
            quiz: [
                { q: 'Does it reuse knowledge?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it speed up learning?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like bike to motorcycle?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'mean-absolute-error',
            title: 'Mean Absolute Error',
            emoji: 'üìè',
            summary: 'Average distance between predicted and actual values.',
            tags: ['evaluation', 'regression'],
            one: 'MAE measures how far off predictions are from reality on average.',
            story: 'Like measuring how far your dart throws are from the bullseye and taking the average.',
            examples: [
                'House price prediction accuracy',
                'Temperature forecasting error',
            ],
            grown: 'A regression metric that calculates the average absolute difference between predicted and actual values.',
            quiz: [
                { q: 'Does it measure prediction distance?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it used for regression?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like dart accuracy?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'accuracy',
            title: 'Accuracy',
            emoji: 'üéØ',
            summary: 'Percentage of predictions that were correct.',
            tags: ['evaluation', 'classification'],
            one: 'Accuracy shows what percentage of predictions the model got exactly right.',
            story: 'Like a test score - if you got 85 out of 100 questions right, your accuracy is 85%.',
            examples: [
                'Email spam detection rate',
                'Image recognition success',
            ],
            grown: 'A classification metric measuring the ratio of correct predictions to total predictions made.',
            quiz: [
                { q: 'Is it a percentage?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it show correctness?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like a test score?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'precision',
            title: 'Precision',
            emoji: 'üîç',
            summary: 'Of all positive predictions, how many were actually correct.',
            tags: ['evaluation', 'classification'],
            one: 'Precision measures how many of your positive predictions were actually right.',
            story: 'Like a spam filter - of all emails it marked as spam, what percentage actually was spam.',
            examples: [
                'Medical test accuracy',
                'Fraud detection precision',
            ],
            grown: 'A classification metric measuring the ratio of true positives to all positive predictions made.',
            quiz: [
                { q: 'Does it focus on positive predictions?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it prevent false alarms?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like spam filter accuracy?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'f1-score',
            title: 'F1-Score',
            emoji: '‚öñÔ∏è',
            summary: 'A balance between precision and recall.',
            tags: ['evaluation', 'classification'],
            one: 'F1-score combines precision and recall into one balanced metric.',
            story: 'Like getting a grade that considers both how careful you are and how much you catch.',
            examples: [
                'Medical diagnosis evaluation',
                'Information retrieval systems',
            ],
            grown: 'The harmonic mean of precision and recall, providing a single metric that balances both concerns.',
            quiz: [
                { q: 'Does it balance precision and recall?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it a single metric?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like a balanced grade?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'mean-squared-error',
            title: 'Mean Squared Error',
            emoji: 'üìä',
            summary: 'Average of squared differences between predicted and actual values.',
            tags: ['evaluation', 'regression'],
            one: 'MSE punishes big mistakes more heavily by squaring the errors before averaging.',
            story: 'Like grading a test where wrong answers hurt more if they are really wrong.',
            examples: [
                'Stock price prediction error',
                'Weather forecasting accuracy',
            ],
            grown: 'A regression metric that squares prediction errors before averaging, emphasizing larger mistakes.',
            quiz: [
                { q: 'Does it square errors?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it punish big mistakes more?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it used for regression?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'root-mean-squared-error',
            title: 'Root Mean Squared Error',
            emoji: '‚àö',
            summary: 'Square root of MSE, bringing error back to original units.',
            tags: ['evaluation', 'regression'],
            one: 'RMSE is like MSE but converted back to the same units as your original data.',
            story: 'Like measuring distance in miles instead of square miles - easier to understand.',
            examples: [
                'House price prediction error in dollars',
                'Temperature prediction error in degrees',
            ],
            grown: 'The square root of MSE, providing error measurements in the same units as the target variable.',
            quiz: [
                { q: 'Is it the square root of MSE?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Does it use original units?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it easier to interpret than MSE?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'auc-roc',
            title: 'AUC-ROC',
            emoji: 'üìã',
            summary: 'How well a model separates different classes.',
            tags: ['evaluation', 'classification'],
            one: 'AUC-ROC measures how good your model is at telling different categories apart.',
            story: 'Like testing how well you can tell cats from dogs in photos at different difficulty levels.',
            examples: [
                'Medical test effectiveness',
                'Credit scoring models',
            ],
            grown: 'Area Under the Receiver Operating Characteristic curve, measuring classification ability across all thresholds.',
            quiz: [
                { q: 'Does it measure separation ability?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is 1.0 perfect separation?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it like cat vs dog recognition?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },
        {
            slug: 'log-loss',
            title: 'Log Loss',
            emoji: 'üìâ',
            summary: 'Punishes confident wrong predictions heavily.',
            tags: ['evaluation', 'classification'],
            one: 'Log loss measures how wrong your confident predictions are.',
            story: 'Like getting in more trouble when you are really sure about a wrong answer.',
            examples: [
                'Probability prediction accuracy',
                'Neural network training',
            ],
            grown: 'A loss function that penalizes false classifications, especially when the model is confident but wrong.',
            quiz: [
                { q: 'Does it punish confident mistakes?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is lower better?', options: ['Yes', 'No'], a: 'Yes' },
                { q: 'Is it about confidence?', options: ['Yes', 'No'], a: 'Yes' },
            ],
        },

    ],
};